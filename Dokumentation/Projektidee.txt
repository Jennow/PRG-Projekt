=== Projektidee Jennow, 2016-04-06 ===

Mein Projekt wird eine Umwandlung des Brettspiels Airlines Europe in ein Computerspiel nach einem Vorschlag von Herr Alpers sein.

In diesem Spiel geht es darum, sich durch den Besitz von Aktien verschiedener Airlines gegenüber
seinen Gegnern einen Vorteil zu verschaffen. 
Das Gewinnen ist abhängig von dem Wert der Airlines und dem Anteil an Aktien, die der Spieler von der jeweiligen Airline besitzt.

Im Hintergrund befindet sich das Spielfeld, das die Karte Europas zeigt, auf der sich Flugzeuge fortbewegen und so den Wert der
zugehörigen Airline steigern können. Die Strecken verbinden je zwei Flughäfen miteinander. Für jede Strecke gibt es mehrere
Fluglizenzen mit verschiedenen Preisen. Jede Airline beginnt bei ihrem Heimatflughafen.

Im Vordergrund sieht der Spieler den Aktienmarkt, Übersichten über die Aktien, die sich in seinem
Besitz befinden und über diejenigen, die die Gegner sichtbar ausgelegt haben. Außerdem wird ihm noch sein Kontostand (Geld und 
Siegpunkte) und das Aktionsmenü angezeigt. Zur Platzersparnis (besonders auf Smartphones) erscheinen einige der Anzeigen erst nach dem
Klick auf einen zugehörigen Button. Im Spielverlauf gibt es drei Wertungsrunden, in denen Siegpunkte an die Spieler verteilt werden,
je nach Anzahl und Wert der Aktien, die sie besitzen. 

Die Anzahl der Gegner kann selbst ausgewählt werden. Bei weniger Mitspielern fallen bestimmte Spielkomponenten und weg, so dass das
Spiel nicht so lange dauert.Das Spiel kann mit Freunden oder mit fremden Mitspielern gespielt werden.
Zu Beginn erhält jeder Spieler ein Startkapital und Aktien. Man kann Aktien geheim halten oder für die Gegner sichtbar machen.

### Spielablauf ###
Ist ein Spieler an der Reihe, erscheint das Aktionsmenü mit vier Schaltflächen (Hier A,B,C,D)
 
A) Eine oder zwei Streckenlizenzen kaufen und eine Aktie erhalten
B) Eigene Aktien für Gegner sichtbar machen und Dividende erhalten	
C) „Air Abacus“ Aktien gegen eine eigene Aktie tauschen
D)  8 Mio von der Bank erhalten											
	
#### Spielende ####
Das Spiel endet mit dem Ende der 3. Wertung und es gewinnt der Spieler mit den meisten Siegpunkten.



=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===

Sie haben jetzt gezeigt, dass Sie einfache Arbeiten mit einem Git-Repository beherrschen.
Als Teil der letzten Aufgabe sollten Sie beschreiben, was Ihre Anwendung tun soll, also was für Funktionalitäten Ihre Anwendung bieten
soll.
Wenn Sie hier nichts angegeben haben, dann werde ich Ihnen einen Vorschlag hochladen, mit dem Sie weiterarbeiten können.
In der Veranstaltung haben Sie außerdem gelernt, was Markup Languages sind.

Die nächste Aufgabe besteht aus den folgenden Teilen:

1.) Lesen Sie mein Feedback durch und setzen Sie die beschriebenen Aufgaben um.

Für die folgende Aufgabe sollten Sie mindestens eine halbe Stunde investieren. Zwei Stunden wäre aber etwas zu viel des guten.
Bearbeiten Sie die Aufgaben 2. und 3. bitte innerhalb von 48 Stunden, weil andere Studierende davon abhängen, dass Sie sie beendet
haben.
Bearbeiten Sie die Aufgaben auf jeden Fall in der vorgegebenen Reihenfolge.
Und bearbeiten Sie eine Aufgabe nicht nachträglich nochmal. (Wenn Sie also z.B. Aufgabe 3. bearbeiten, dann ändern Sie bitte nichts an
Aufgabe 1. nachträglich ab. Dafür wird später noch genug Zeit sein.)

2.) Bennen Sie die strukturellen Elemente, aus denen Ihre Anwendung bestehen soll.
Es ist dabei egal, ob es diese Elemente in HTML gibt.
Es ist auch egal, ob Sie sich schon in HTML eingearbeitet haben.
Wichtig ist nur, dass Sie die strukturellen Elemente benennen, aus der die Anwendung bestehen soll.
Speichern Sie diese Aufstellung als HTML-Kommentar in einer Datei mit dem Namen

strukt.html

, die Sie in Ihrem Repository abspeichern. Wichtig: Die Datei soll nicht im Unterverzeichnis Dokumentation des Repositories gespeichert werden, weil sie die Basis für das erste HTML-Dokument werden wird.

Wenn Sie noch unsicher sind: Strukturelle Elemente können alles mögliche sein:
- Tabellen
- Listen
- Schaltflächen
- Textfelder
- Bildbereiche
- Hintergrundmusik
- Absätze
- ...

In anderen Worten: Ein strukturelles Element ist etwas, das ein abgegrenzter Teil der Anwendung ist.
Notieren Sie kurz, welche Funktion jedes der von Ihnen genannten Elemente haben soll.

Hier einige Beispiele:
- Schaltfläche (Nutzer können per Klick bestätigen, dass eine Eingabe abgeschickt werden soll.)
- Textfeld für Namen (Nutzer können Ihren Nachnamen eintragen.)
- Log-In-Maske (Bereich, in dem Nutzer sich einloggen können.)
- - Teile der Log-In-Maske:
- - Textfeld für Username
- - Textfeld, das die Eingabe nicht anzeigt, fürs Passwort
- Tabelle, 7 x 5 Felder (Jedes Feld soll ein Bild anzeigen, das ein Feld des Spielbretts ist. Wenn Nutzer ein Feld anwählen, soll ein Menü erscheinen.)
- - Menü für jedes Feld der Tabelle mit Texteinträgen (Eintrag für "Gebäude abreißen", "Feld kaufen")
- Hintergrundbild (Hier sollen einzelne Bilder als Diashow eingeblendet werden.)
- Werbebanner
- Schaltfläche für die Maskierung von NSFW (NSFW = Not safe for work)(NutzerInnen können über diese Schaltfläche eine andere Anwendung in der Vordergrund einblenden lassen, damit der Chef nicht sieht, dass sie gerade spielen.)

3.) Schauen Sie jetzt in der Liste der Repositories (nicht in der Tabelle der Accounts) nach, welche zehn Repositories vor und nach Ihrem Repository aufgeführt sind und geben Sie den Besitzern dieser Repositories Zugriffsrechte auf Ihr Repository.

Bsp.: Sie haben das Repository BerndStromberg. Dann folgen die zehn Repositories der Nutzer BlackWolf63, Cantinaband, CaptainWeasle, ColePfeiffer, CurvLietzau,
DangerDulf, dnbdel, Domsche, Eldinox und Eupuco und vor Ihnen gibt es die fünf Repositories der Nutzer 2238867, amelie-beh, Anger21, anita1997 und Asphalon. all diesen Accounts geben Sie jetzt Zugriffsrechte auf Ihr Repository, so wie Sie das schon für mich getan haben. Wenn Sie, wie BerndStrommberg zu weit am Anfang der Liste stehen (hier gibt es ja nur fünf andere Accounts bis zum Anfang der Liste), dann geben Sie zusätzlich noch den Besitzern der letzten fünf Repositories Zugriffsrechte. Es sollten insgesamt 20 Accounts Zugriffsrecht haben.

Für die nächsten zwei Aufgaben sollten Sie pro Repository zwischen zehn Minuten und einer Stunde aufwenden. Weniger ist zu wenig und mehr ist zu viel.
Beachten Sie dabei bitte, dass Sie hier letzten Endes Kritik an der Arbeit eines/einer anderen üben und das einige von Ihnen noch nie programmiert haben. Arbeiten Sie deshalb bitte daran, alles, was Sie ergänzen so neutral und höflich wie möglich zu formulieren, denn Unwissenheit und mangelndes Verständnis fürs Programmieren sind eben nicht das selbe wie Dummheit oder Faulheit.

Bitte erledigen Sie diese Aufgaben innerhalb der nächsten sieben Tage.

4.) Als nächstes greifen Sie auf die nach Ihrem Repository nachfolgenden fünf Repositories zu und bearbeiten hier die folgende Aufgabe. (Hier hängen Sie also davon ab, dass andere Kommilitonen Aufgabe 3. erledigt haben.) 

Lesen Sie sich die Projektidee durch und machen Sie sich ähnlich wie bei 2. einfache Stichpunkte über strukturelle Elemente, die Sie bei dieser Projektidee sinnvoll finden. (Hier erstmal nur Stichpunkte, Details arbeiten Sie unter 5. aus.)

5.) Öffnen Sie jetzt die Datei strukt.html des Repositories, das Sie gerade bearbeiten. Ergänzen Sie Elemente, die Sie unter 4. notiert haben und die noch nicht eingetragen sind in der unter 2. beschriebenen Form.

Abschließender Hinweis zu 4. und 5.:

Auch wenn das nirgends explizit steht sollen Sie Änderungen in das Repository pushen, aus dem sie die Datei strukt.html gepullt haben.
Es ist dabei sehr wahrscheinlich, dass Sie (vielleicht auch erst später während der Projektbearbeitung) einen merge durchführen müssen. Wenn Sie sich noch nicht angesehen haben, wie das geht, dann tun Sie es jetzt.


Viele Grüße,
Markus Alpers

== Notiz Jennow ==
   Kommentierte Repositorys: julhe/PRGProjekt1  (17.04.2016)
   			     korppikuolema/Projekt1 (19.04.2016)
   			     laGranada/ProjektA (22.04.2016)
   			     joelkrauleidies/Projekt1 (22.04.2016)
   Die letzte Person, KingBradley97 hat leider noch keine strukt.html Datei erstellt
   
==Feedback Jonathan==
Insgesammt sieht das sehr gut aus. Allerdings kann ich mir vorstellen, dass es ziemlich schwierig ist eine KI zu erstellen. Eventuell ist es da einfacher das ganze als Multiplayer zu konzipieren.

==Feedback Jaacii==
Stimme da Jonathan zu. Klingt alles sehr gut, aber eine KI kann kompliziert werden. 

===================================
=== Feedback Alpers, 2016-04-28 ===
===================================

Ein wichtiger Hinweis am Anfang: Bitte löschen Sie keine Kommentare, damit erkennbar ist, wie die Entwicklung des Projekts abgelaufen ist. In Ihrem Fall hatte ich beispielsweise vorgeschlagen, dass Sie dieses Spiel als Vorlage verwenden. Momentan wirkt es auf Außenstehende, als hätten Sie sich dafür entschieden und ohne Absprache mit der Arbeit am Projekt begonnen.

Leider ist Ihre Beschreibung bei weitem zu umfangreich und entspricht nicht dem, was in Kap. 5 vorgegeben ist. Hier ein Beispiel:
-> "Es gibt: Eine Bank, die Geld verleiht und auch bankrottgehen kann"
Das klingt insbesondere zu sehr nach einer Beschreibung aus einem Brettspiel. Und für die Entwicklung der strukturellen Elemente ist es leider nicht hilfreich.

Das führt mich auch direkt zu einem wichtigen Hinweis: Es ist nicht Ihre Aufgabe, das genannte Spiel 1:1 als Computerspiel umzusetzen, sondern basierend auf diesem Spiel ein webbasiertes Spiel zu konzipieren.

Wertung 2: Projektbeschreibung: gesamt: 3 / 10
- Pro Interaktionsmöglichkeit: wegen der Masse an Einträgen unklar.
- Knappe aber klare Beschreibung: 3 (wegen der Zusammenfassung, für die eigentliche Beschreibung: 0 weil nicht als Basis für die nächsten Arbeitsschritte geeignet.)
- Werbeslogans u.ä.: 0
- Designaspekte: 0
- Voraussetzung bekannten Wissens: 0

Jetzt kommt eine nächste Schwierigkeit: Sie müssen sich überlegen, was Sie alles streichen und was sie alle ergänzen müssen, damit es ein eigenständiges webbasiertes Computerspiel wird. Ihre Aufgabe besteht gerade nicht darin, das Spiel 1:1 umzusetzen, sondern nach persönlicher Vorstellung zusätzliche Interaktionsmöglichkeiten zu schaffen.

Sie müssen hier also insbesondere an Dinge denken, die in einem Brettspiel nicht vorkommen. Ein Log-In oder eine Highscore-Liste wären nur zwei von vielen Möglichkeiten, die hinzukommen. Die direkte Unterhaltung zwischen Spielern muss dagegen im Bedarfsfall anders gelöst werden. Und Aufgaben wie das Aufnehmen einer Karte, das verschieben eines Elements auf dem Spielbrett fallen häufig bei Computerspielen unter den Tisch.

Bitte überarbeiten Sie die Beschreibung wie in Kap. 5 vorgegeben. Der Sinn und Zweck dahinter ist der, dass Sie so eine Grundlage haben, auf deren Basis Sie sinnvoll strukturelle Elemente (Aufg. 2) entwickeln können.

=====================
=== Feedback Ende ===
=====================
