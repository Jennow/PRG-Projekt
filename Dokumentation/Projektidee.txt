=== Projektidee Jennow, 2016-04-06 ===

Mein Projekt wird eine Umwandlung des Brettspiels Airlines Europe in ein Computerspiel sein.
In diesem Spiel geht es darum, sich durch den Besitz von Aktien verschiedener Airlines gegenüber seinen Gegnern einen Vorteil zu
verschaffen. Das Gewinnen ist abhängig von dem Wert der Airlines und dem Anteil an Aktien, die der Spieler von der jeweiligen Airline
besitzt.

#### Genauere Erklärung des Computerspiels ####

Es gibt:
-	ein Spielfeld mit vorgegebenen Heimatflughäfen, Fluglinien und Streckenlizenzen (angelehnt an die Karte Europas und das
	europäische Flugnetz)
--> 	Flugzeugsymbol auf einer Streckenlizenz symbolisiert den Kauf ebendieser
-	Eine Bank, die Geld verleiht und auch bankrottgehen kann
-	Pro Spieler ein Konto für Spielgeld in Mio + Ein Spielgeldkonto für die Bank 
-	Reguläre Airlines (durch Farbe identifizierbar) + Position des Heimatflughafens auf dem Spielfeld + zugehörige Aktien 
	+ zugehörige
  	Anzahl Flugzeugsymbole, die zur Verfügung stehen:
-->	Anz. Aktien u. Flugzeugsymbole: 16x gelb, 15x blau, 14x violett, 13x rot, 11x schwarz, 10x braun, 9x grün, 9x orange, 8x grau,
	 7x weiß
-	"Air Abacus" = Airline ohne Flugzeuge (Aktienwert konstant) + 20 zugehörige Aktien
-	Bonusverbindungen für die 4 Airlines mit den wenigsten Aktien (Steigert den Wert der Airline im Aktienmarkt)
-	Pro Spieler ein Konto für die Aktien in seinem Besitz
-	Eine Aktienkurs-Anzeige in der sich die Airlines befinden und im Wert aufsteigen können
-	Einen Aktienmarkt in dem immer 5 sichtbare Aktien und eine zufällige Aktie zur Verfügung stehen
--> 	Wurde eine Aktie aus dem sichtbaren Markt genommen, wird sie sofort mit einer zufälligen Aktie aufgefüllt
-	Pro Spieler ein Konto für Siegpunkte für die Endwertung
-	Drei Wertungsrunden

Das Spiel wird mit 1-4 virtuellen Gegnern gespielt. Diese sollen automatisch für den Gewinn des Spiels kluge Entscheidungen treffen
(Evtl. mit Schwierigkeitsgrad?) Der Spieler sucht sich zu Beginn die Anzahl der Gegner aus und dementsprechend ändern sich einige
Konditionen des Spiels:
- Pro Spieler werden 30 Mio im Spiel verwendet 								                                 
- Bei 4 Gegnern wird mit allen Airlines gespielt, 								                        bei 3 fällt Gelb weg, 												      
  bei 2 fallen Gelb und Blau weg,											         
  bei einem Gegner fallen Gelb, Blau und Violett weg

#### Spielvorbereitungen ####

- 	Für den Spielablauf wird eine Reihenfolge der Spieler festgelegt.
-	Der Startspieler wird per Zufall ausgesucht. Er erhält 1 Siegpunkt, der zweite Spieler 2, etc.
-	Jeder Spieler erhält von dem verwendeten Geld 8 Mio, der Rest wird der Bank zugewiesen
-	Jeder Spieler erhält 8 zufällige Aktien, von denen er 2 (von verschiedenen Airlines) auswählt und für die anderen sichtbar
	macht
-->	Hat der Spieler zufällig nur Aktien einer Airline erhalten, wird der Prozess bei ihm wiederholt bis mindestens 2 verschiedene
	Airlines vertreten sind.
-	5 zufällige Aktien werden in dem Aktienmarkt, sichtbar für alle Spieler, abgelegt
-	Die restlichen Aktien werden später zum Auffüllen des Aktienmarktes und für den Zufallserwerb einer Aktie benötigt




### Spielablauf ###

 Jeder Spieler wählt der Reihe nach immer eine von 4 Aktionen aus:
 
A) Eine oder zwei Streckenlizenzen kaufen und eine Aktie erhalten

- Die Strecken verbinden je zwei Flughäfen miteinander
- Für jede Strecke gibt es mehrere Lizenzen mit verschiedenen Preisen
- Man kauft automatisch die günstigste verfügbare Lizenz auf einer Strecke
- Jede Airline beginnt bei ihrem Heimatflughafen
- Hat eine Airline eine Lizenz für Verbindung zu einem Flughafen, kann sie von diesem alle durch Fluglinien mit ihm verbundenen 
  Flughäfen ansteuern und für diese Strecken ebenfalls Lizenzen erwerben
- Man muss keine Aktien einer Airline besitzen um eine Streckenlizenz für sie zu kaufen
- Die Airline steigt in der Aktienkurs-Anzeige um die Anzahl der Punkte, die durch den Kaufpreis der Streckenlizenz geteilt durch Mio
  angegeben wird.
- Wird eine der 4 Bonusverbindungen mit der passenden Airline gekauft, erhält diese Airline zusätzlich Bonuspunkte in der
  Aktienkurs-Anzeige.
- Als Bonus für Aktion A sucht der Spieler sich eine Aktie aus dem Aktienmarkt (inkl. Zufallsaktie) aus.

B) Eigene Aktien für Gegner sichtbar machen und Dividende erhalten	
- Entweder beliebig viele Aktien einer Airline oder jeweils eine Aktie von 2 Airlines 				
- Bonus: 2 Mio pro sichtbar gemachter Aktie
	
C) „Air Abacus“ Aktien gegen eine eigene Aktie (sichtbar oder/und verdeckt) tauschen
- Entweder 1 beliebige Aktie gegen 1 „Air Abacus“ Aktie							
- Oder 3 beliebige Aktien gegen 2 „Air Abacus“ Aktien
	
D)  8 Mio von der Bank erhalten											
- Hat die Bank nicht mehr genügend Geld um das auszuzahlen, wird ein Rettungsfond eingerichtet:		
- Jeder Spieler behält 8 Mio und gibt den Rest an die Bank							
- Der Spieler, der das Geld von der Bank erfragt hat, erhält dieses nun aus dem Rettungsfond	

### Wertung ###

- Drei Mal im Spielverlauf findet eine Wertung nach Erfüllung folgender Bedingungen statt:	                                         
  1: nachdem ein Viertel der Aktien im Aktienmarkt verwendet wurden 									
  2: nachdem die Hälfte der Aktien im Aktienmarkt verwendet wurden 
  3: wenn nur noch 10 unsichtbare Aktien im Aktienmarkt sind

Ausgelöst wird die Wertung, wenn ein Spieler nach dem Erfüllen der Bedingung versucht, 
erneut eine Aktie aus dem Aktienmarkt zu nehmen.

Aktienmarkt leeren
- Jeder Spieler wählt eine der sichtbaren Aktien aus und nimmt sie in die eigenen Aktien auf.			           
- Der Spieler der die Wertung ausgelöst hat, beginnt   							                                 
- Abschließend werden übrig gebliebene Aktien aus dem Spiel entfernt und der sichtbare 
  Aktienmarkt wird wieder mit 5 Aktien aufgefüllt.

Airlines werten
- Pro Airline wird die Position der Spieler ermittelt, d.h. ob sie die meisten, zweitmeisten, usw. Aktien besitzen.
- Dem Wert der Aktie wird eine bestimmte Anzahl an Siegpunkten für die jeweiligen Positionen zugeordnet.
- Nach diese beiden Bedingungen erhalten die Spieler Siegpunkte.
- Bei gleichen Positionen werden Positionen zusammengezählt, durch die betreffende Spieleranzahl geteilt, ggf. aufgerundet und
  dementsprechend Siegpunkt-Chips verteilt.

#### Spielende ####
- Das Spiel endet mit dem Ende der 3. Wertung und es gewinnt der Spieler mit den meisten Siegpunkten.



=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===

Sie haben jetzt gezeigt, dass Sie einfache Arbeiten mit einem Git-Repository beherrschen.
Als Teil der letzten Aufgabe sollten Sie beschreiben, was Ihre Anwendung tun soll, also was für Funktionalitäten Ihre Anwendung bieten
soll.
Wenn Sie hier nichts angegeben haben, dann werde ich Ihnen einen Vorschlag hochladen, mit dem Sie weiterarbeiten können.
In der Veranstaltung haben Sie außerdem gelernt, was Markup Languages sind.

Die nächste Aufgabe besteht aus den folgenden Teilen:

1.) Lesen Sie mein Feedback durch und setzen Sie die beschriebenen Aufgaben um.

Für die folgende Aufgabe sollten Sie mindestens eine halbe Stunde investieren. Zwei Stunden wäre aber etwas zu viel des guten.
Bearbeiten Sie die Aufgaben 2. und 3. bitte innerhalb von 48 Stunden, weil andere Studierende davon abhängen, dass Sie sie beendet
haben.
Bearbeiten Sie die Aufgaben auf jeden Fall in der vorgegebenen Reihenfolge.
Und bearbeiten Sie eine Aufgabe nicht nachträglich nochmal. (Wenn Sie also z.B. Aufgabe 3. bearbeiten, dann ändern Sie bitte nichts an
Aufgabe 1. nachträglich ab. Dafür wird später noch genug Zeit sein.)

2.) Bennen Sie die strukturellen Elemente, aus denen Ihre Anwendung bestehen soll.
Es ist dabei egal, ob es diese Elemente in HTML gibt.
Es ist auch egal, ob Sie sich schon in HTML eingearbeitet haben.
Wichtig ist nur, dass Sie die strukturellen Elemente benennen, aus der die Anwendung bestehen soll.
Speichern Sie diese Aufstellung als HTML-Kommentar in einer Datei mit dem Namen

strukt.html

, die Sie in Ihrem Repository abspeichern. Wichtig: Die Datei soll nicht im Unterverzeichnis Dokumentation des Repositories gespeichert werden, weil sie die Basis für das erste HTML-Dokument werden wird.

Wenn Sie noch unsicher sind: Strukturelle Elemente können alles mögliche sein:
- Tabellen
- Listen
- Schaltflächen
- Textfelder
- Bildbereiche
- Hintergrundmusik
- Absätze
- ...

In anderen Worten: Ein strukturelles Element ist etwas, das ein abgegrenzter Teil der Anwendung ist.
Notieren Sie kurz, welche Funktion jedes der von Ihnen genannten Elemente haben soll.

Hier einige Beispiele:
- Schaltfläche (Nutzer können per Klick bestätigen, dass eine Eingabe abgeschickt werden soll.)
- Textfeld für Namen (Nutzer können Ihren Nachnamen eintragen.)
- Log-In-Maske (Bereich, in dem Nutzer sich einloggen können.)
- - Teile der Log-In-Maske:
- - Textfeld für Username
- - Textfeld, das die Eingabe nicht anzeigt, fürs Passwort
- Tabelle, 7 x 5 Felder (Jedes Feld soll ein Bild anzeigen, das ein Feld des Spielbretts ist. Wenn Nutzer ein Feld anwählen, soll ein Menü erscheinen.)
- - Menü für jedes Feld der Tabelle mit Texteinträgen (Eintrag für "Gebäude abreißen", "Feld kaufen")
- Hintergrundbild (Hier sollen einzelne Bilder als Diashow eingeblendet werden.)
- Werbebanner
- Schaltfläche für die Maskierung von NSFW (NSFW = Not safe for work)(NutzerInnen können über diese Schaltfläche eine andere Anwendung in der Vordergrund einblenden lassen, damit der Chef nicht sieht, dass sie gerade spielen.)

3.) Schauen Sie jetzt in der Liste der Repositories (nicht in der Tabelle der Accounts) nach, welche zehn Repositories vor und nach Ihrem Repository aufgeführt sind und geben Sie den Besitzern dieser Repositories Zugriffsrechte auf Ihr Repository.

Bsp.: Sie haben das Repository BerndStromberg. Dann folgen die zehn Repositories der Nutzer BlackWolf63, Cantinaband, CaptainWeasle, ColePfeiffer, CurvLietzau,
DangerDulf, dnbdel, Domsche, Eldinox und Eupuco und vor Ihnen gibt es die fünf Repositories der Nutzer 2238867, amelie-beh, Anger21, anita1997 und Asphalon. all diesen Accounts geben Sie jetzt Zugriffsrechte auf Ihr Repository, so wie Sie das schon für mich getan haben. Wenn Sie, wie BerndStrommberg zu weit am Anfang der Liste stehen (hier gibt es ja nur fünf andere Accounts bis zum Anfang der Liste), dann geben Sie zusätzlich noch den Besitzern der letzten fünf Repositories Zugriffsrechte. Es sollten insgesamt 20 Accounts Zugriffsrecht haben.

Für die nächsten zwei Aufgaben sollten Sie pro Repository zwischen zehn Minuten und einer Stunde aufwenden. Weniger ist zu wenig und mehr ist zu viel.
Beachten Sie dabei bitte, dass Sie hier letzten Endes Kritik an der Arbeit eines/einer anderen üben und das einige von Ihnen noch nie programmiert haben. Arbeiten Sie deshalb bitte daran, alles, was Sie ergänzen so neutral und höflich wie möglich zu formulieren, denn Unwissenheit und mangelndes Verständnis fürs Programmieren sind eben nicht das selbe wie Dummheit oder Faulheit.

Bitte erledigen Sie diese Aufgaben innerhalb der nächsten sieben Tage.

4.) Als nächstes greifen Sie auf die nach Ihrem Repository nachfolgenden fünf Repositories zu und bearbeiten hier die folgende Aufgabe. (Hier hängen Sie also davon ab, dass andere Kommilitonen Aufgabe 3. erledigt haben.) 

Lesen Sie sich die Projektidee durch und machen Sie sich ähnlich wie bei 2. einfache Stichpunkte über strukturelle Elemente, die Sie bei dieser Projektidee sinnvoll finden. (Hier erstmal nur Stichpunkte, Details arbeiten Sie unter 5. aus.)

5.) Öffnen Sie jetzt die Datei strukt.html des Repositories, das Sie gerade bearbeiten. Ergänzen Sie Elemente, die Sie unter 4. notiert haben und die noch nicht eingetragen sind in der unter 2. beschriebenen Form.

Abschließender Hinweis zu 4. und 5.:

Auch wenn das nirgends explizit steht sollen Sie Änderungen in das Repository pushen, aus dem sie die Datei strukt.html gepullt haben.
Es ist dabei sehr wahrscheinlich, dass Sie (vielleicht auch erst später während der Projektbearbeitung) einen merge durchführen müssen. Wenn Sie sich noch nicht angesehen haben, wie das geht, dann tun Sie es jetzt.


Viele Grüße,
Markus Alpers

== Notiz Jennow ==
   Kommentierte Repositorys: julhe/PRGProjekt1  (17.04.2016)
   			     korppikuolema/Projekt1 (19.04.2016)
   			     laGranada/ProjektA (22.04.2016)
   			     joelkrauleidies/Projekt1
   Die letzte Person hat leider noch keine strukt.html Datei erstellt
   
==Feedback Jonathan==
Insgesammt sieht das sehr gut aus. Allerdings kann ich mir vorstellen, dass es ziemlich schwierig ist eine KI zu erstellen. Eventuell ist es da einfacher das ganze als Multiplayer zu konzipieren.

==Feedback Jaacii==
Stimme da Jonathan zu. Klingt alles sehr gut, aber eine KI kann kompliziert werden. 
